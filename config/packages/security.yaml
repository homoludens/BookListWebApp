security:
    # https://symfony.com/doc/current/security/experimental_authenticators.html
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#c-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            # allow authentication using a form or HTTP basic
            form_login: ~
            http_basic: ~

            # configure the form authentication as the entry point for unauthenticated users
            entry_point: form_login

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

#            custom_authenticators:
#                - App\Security\ApiKeyAuthenticator
            custom_authenticator: App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # remember to also configure the entry_point if the
            # authenticator implements AuthenticationEntryPointInterface
            # entry_point: App\Security\CustomFormLoginAuthenticator

#            login_throttling:
#                max_attempts: 3
#                interval: '15 minutes'

    role_hierarchy:
        ROLE_VERIFIED_USER: [ ROLE_USER ]

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
            # allow unauthenticated users to access the login form
#         - { path: ^/admin/login, roles: PUBLIC_ACCESS }
            # but require authentication for all other admin routes
         - { path: ^/admin, roles: ROLE_ADMIN }
         - { path: ^/login, roles: PUBLIC_ACCESS }
         - { path: ^/edit, roles: ROLE_USER }
         - { path: ^/profile, roles: ROLE_USER }
